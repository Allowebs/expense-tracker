import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { Source, Transaction } from "@prisma/client";
import { IncomeTable } from "@/components/IncomeTable";
import { ExpenseTable } from "@/components/ExpenseTable";
import { InvestmentTable } from "@/components/InvestmentTable";
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";
import { useState } from "react";
import dayjs from "dayjs";
import CalendarMonthIcon from "@mui/icons-material/CalendarMonth";
import { AppHeader } from "@/components/AppHeader";

export type TransactionType = Transaction & {
    source: Source;
};

export default function Home(props: { transactions: TransactionType[] }) {
    const [incomes, setIncomes] = useState<TransactionType[]>(
        props.transactions.filter(
            (transaction) => transaction.source.type === "Income"
        )
    );
    const [expenses, setExpenses] = useState<TransactionType[]>(
        props.transactions.filter(
            (transaction) => transaction.source.type === "Expense"
        )
    );
    const [investments, setInvestments] = useState<TransactionType[]>(
        props.transactions.filter(
            (transaction) => transaction.source.type === "Investment"
        )
    );
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={`${styles.main}`}>
                <Container>
                    <AppHeader />
                    <Grid container py={10}>
                        <Grid container spacing={2}>
                            <Grid item xs={12} lg={8} md={6}>
                                <Typography variant="h3" fontWeight="700">
                                    Expense Tracker
                                </Typography>
                                <Typography color={"gray"} variant="h6">
                                    This app is built for you to manage your
                                    income and expenses with ease.
                                </Typography>
                            </Grid>
                            <Grid item xs={12} lg={4} md={6}>
                                <Typography
                                    variant="h5"
                                    fontWeight="500"
                                    style={{
                                        display: "flex",
                                        alignItems: "center",
                                    }}
                                >
                                    <CalendarMonthIcon
                                        style={{ marginRight: 10 }}
                                    />
                                    {dayjs(new Date()).format("DD-MM-YYYY")}
                                </Typography>
                            </Grid>
                        </Grid>
                        <Grid container spacing={2} py={5}>
                            <Grid item xs={12} lg={4} md={6}>
                                <IncomeTable
                                    incomes={incomes}
                                    setIncomes={setIncomes}
                                />
                            </Grid>
                            <Grid item xs={12} lg={4} md={6}>
                                <ExpenseTable
                                    expenses={expenses}
                                    setExpenses={setExpenses}
                                />
                            </Grid>
                            <Grid item xs={12} lg={4} md={6}>
                                <InvestmentTable
                                    investments={investments}
                                    setInvestments={setInvestments}
                                />
                            </Grid>
                        </Grid>
                    </Grid>
                </Container>
            </main>
        </>
    );
}

export async function getServerSideProps() {
    const response = await fetch(
        "http://localhost:3000/api/transaction/get",
        {}
    );
    const data = await response.json();
    return {
        props: {
            transactions: data,
        },
    };
}
